{"version":3,"sources":["store/reducers/cartReducer.js","store/reducers/productListReducer.js","store/reducers/categoriesReducer.js","store/reducers/productReducer.js","store/reducers/categoryReducer.js","store/reducers/pageNumReducer.js","store/reducers/checkOutReducer.js","store/reducers/productForModalReducer.js","store/reducers/index.js","services/storage.service.js","api/productAPI.js","api/cartAPI.js","store/actions/index.js","cmps/BasicPagination.tsx","cmps/Filter.tsx","cmps/ProductModal.tsx","views/ProductList.tsx","cmps/CheckOutMsg.tsx","views/Cart.tsx","cmps/AppHeader.tsx","App.tsx","index.tsx"],"names":["cartReducer","state","action","type","payload","productListReducer","categoriesReducer","productReducer","categoryReducer","pageNumReducer","checkOutReducer","isCheckOut","emptyCart","invoiceTotal","productForModalReducer","combineReducers","productList","product","categories","cartItems","selectedCategory","currentPageNum","checkOut","productForModal","storageService","query","getById","entityType","entityId","then","entities","find","entity","id","post","newEntity","_makeId","unshift","_save","remove","idx","findIndex","splice","saveToStorage","key","value","localStorage","setItem","JSON","stringify","loadFromStorage","data","getItem","parse","undefined","Promise","resolve","length","text","possible","i","charAt","Math","floor","random","productAPI","queryByCategory","getCategories","a","sortBy","console","log","fetch","res","json","sort","itemsByCategory","b","title","price","category","cartAPI","getCart","addToCart","deleteCart","getProductById","qty","push","addNewItemToCart","cartItem","updateItemInCart","method","body","userId","date","products","productId","quantity","didCheckOut","getProductList","dispatch","productAdded","setPageNum","pageNum","err","getProductForModal","useStyles","makeStyles","theme","createStyles","root","marginTop","spacing","marginBottom","BasicPagination","productsLength","useDispatch","useSelector","classes","className","Pagination","page","count","ceil","color","onChange","event","newPageNum","formControl","minWidth","cursor","selectEmpty","SimpleSelect","useEffect","FormControl","InputLabel","Select","labelId","categoryName","target","MenuItem","map","toUpperCase","slice","FormHelperText","media","height","ProductModal","onCloseModal","onAddToCart","Card","src","image","alt","CardContent","Typography","gutterBottom","variant","component","description","CardActions","Button","size","onClick","table","backgroundColor","ProductList","aFunc","productsForDisplay","handleAddToCart","ev","stopPropagation","handleSort","handleOpenProductModal","Container","fixed","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","maxWidth","margin","textAlign","padding","fontSize","CheckOutMsg","invoiceTotalForMsg","style","href","ccyFormat","num","toFixed","Cart","isCheckOutDone","invoiceSubtotal","items","reduce","sum","subtotal","invoiceTaxes","handleCheckOut","to","rowSpan","colSpan","grow","flexGrow","menuButton","marginRight","display","breakpoints","up","inputRoot","sectionDesktop","sectionMobile","PrimarySearchAppBar","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","itemsInCartCount","item","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","position","Toolbar","edge","noWrap","App","path","exact","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ebfd6ff.chunk.js","sourcesContent":["\r\n\r\nconst cartReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'GET_CART':\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cartReducer;","\r\n\r\nconst productListReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'GET_PRODUCT_LIST':\r\n            return action.payload;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default productListReducer;","\r\n\r\nconst categoriesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'GET_CATEGORIES':\r\n            return action.payload;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default categoriesReducer;","\r\n\r\nconst productReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'GET_PRODUCT':\r\n            return action.payload;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default productReducer;","\r\n\r\nconst categoryReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'SET_CATEGORY':\r\n            return action.payload;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default categoryReducer;","\r\n\r\nconst pageNumReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PAGE_NUM':\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default pageNumReducer;","\r\n\r\nconst checkOutReducer = (state = { isCheckOut: false, emptyCart: [], invoiceTotal: 0 }, action) => {\r\n    switch (action.type) {\r\n        case 'CHECK_OUT':\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default checkOutReducer;","\r\n\r\nconst productForModalReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'GET_PRODUCT_FOR_MODAL':\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default productForModalReducer;","import { combineReducers } from \"redux\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport productListReducer from './productListReducer';\r\nimport categoriesReducer from \"./categoriesReducer\";\r\nimport productReducer from \"./productReducer\";\r\nimport categoryReducer from './categoryReducer'\r\nimport pageNumReducer from './pageNumReducer'\r\nimport checkOutReducer from './checkOutReducer'\r\nimport productForModalReducer from \"./productForModalReducer\";\r\n\r\n\r\nexport default combineReducers(\r\n    {\r\n        productList: productListReducer,\r\n        product: productReducer,\r\n        categories: categoriesReducer,\r\n        cartItems: cartReducer,\r\n        selectedCategory: categoryReducer,\r\n        currentPageNum: pageNumReducer,\r\n        checkOut: checkOutReducer,\r\n        productForModal: productForModalReducer\r\n    }\r\n);\r\n","\n\nexport const storageService = {\n    query,\n    getById,\n    post,\n    remove,\n    saveToStorage,\n    loadFromStorage,\n}\n\nfunction query(entityType) {\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\n    return Promise.resolve(entities);\n}\n\nfunction getById(entityType, entityId) {\n    return query(entityType)\n        .then(entities => entities.find(entity => entity.id === entityId))\n}\n\nfunction post(entityType, newEntity) {\n    newEntity.id = _makeId()\n    return query(entityType)\n        .then(entities => {\n            entities.unshift(newEntity);\n            _save(entityType, entities)\n            return newEntity;\n        })\n}\n\nfunction remove(entityType, entityId) {\n    return query(entityType)\n        .then(entities => {\n            const idx = entities.findIndex(entity => entity.id === entityId);\n            entities.splice(idx, 1)\n            _save(entityType, entities)\n        })\n}\n\n\nfunction saveToStorage(key, value) {\n    localStorage.setItem(key, JSON.stringify(value) || null);\n}\n\nfunction loadFromStorage(key) {\n    let data = localStorage.getItem(key);\n    return (data) ? JSON.parse(data) : undefined;\n}\nfunction _save(entityType, entities) {\n    localStorage.setItem(entityType, JSON.stringify(entities))\n}\nfunction _makeId(length = 7) {\n    var text = '';\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}","import { storageService } from \"../services/storage.service\"\r\n\r\n\r\nexport const productAPI = {\r\n    query,\r\n    queryByCategory,\r\n    getCategories\r\n}\r\n\r\n\r\nasync function query(selectedCategory = '', sortBy = '') {\r\n    if (selectedCategory === '') {\r\n        const productList = await storageService.query('productList')\r\n\r\n        if (!productList || !productList.length) {\r\n            console.log('getting data from API')\r\n            return fetch('https://fakestoreapi.com/products')\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    storageService.saveToStorage('productList', json)\r\n                    return json\r\n                })\r\n        }\r\n        console.log('getting data from local storage')\r\n        return sort(productList, sortBy);\r\n    }\r\n    else {\r\n        const itemsByCategory = await queryByCategory(selectedCategory)\r\n        return sort(itemsByCategory, sortBy);\r\n    }\r\n}\r\n\r\nfunction sort(productList, sortBy) {\r\n    switch (sortBy) {\r\n        case 'title':\r\n            return productList.sort((a, b) => {\r\n                if (a.title > b.title) return 1\r\n                else if (a.title < b.title) return -1\r\n                else return 0\r\n            });\r\n        case 'price':\r\n            return productList.sort((a, b) => a.price - b.price);\r\n        default:\r\n            return productList;\r\n    }\r\n\r\n}\r\n\r\nfunction queryByCategory(category) {\r\n    return fetch(`https://fakestoreapi.com/products/category/${category}`)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            return json\r\n        })\r\n}\r\n\r\n\r\nasync function getCategories() {\r\n    const categories = await storageService.query('categories')\r\n\r\n    if (!categories || !categories.length) {\r\n        return fetch('https://fakestoreapi.com/products/categories')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                storageService.saveToStorage('categories', json)\r\n                return json\r\n            })\r\n    }\r\n    return categories;\r\n}","import { storageService } from \"../services/storage.service\"\r\n\r\nexport const cartAPI = {\r\n    getCart,\r\n    addToCart,\r\n    deleteCart,\r\n    checkOut,\r\n    getProductById\r\n}\r\n\r\n\r\nasync function getCart() {\r\n    const cartItems = await storageService.query('cartItems')\r\n    return cartItems || []\r\n}\r\n\r\nasync function addToCart(product) {\r\n    var cartItems = await getCart()\r\n    if (!cartItems || !cartItems.length) {\r\n        product.qty = 1\r\n        cartItems.push(product)\r\n        await addNewItemToCart(product)\r\n        storageService.saveToStorage('cartItems', cartItems)\r\n        return product\r\n    }\r\n    var cartItem = cartItems.find(cartItem => cartItem.id === product.id)\r\n    if (!cartItem) {\r\n        product.qty = 1\r\n        cartItems.push(product)\r\n        await addNewItemToCart(product)\r\n    }\r\n    else {\r\n        product.qty = cartItem.qty + 1\r\n        cartItem.qty++\r\n        await updateItemInCart(product)\r\n    }\r\n    storageService.saveToStorage('cartItems', cartItems)\r\n    return product\r\n}\r\n\r\nasync function updateItemInCart(product) {\r\n    return fetch('https://fakestoreapi.com/carts/7', {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(\r\n            {\r\n                userId: 1,\r\n                date: '2019 - 12 - 10',\r\n                products: [{ productId: product.id, quantity: 3 }]\r\n            }\r\n        )\r\n    })\r\n        .then(res => res.json())\r\n        .then(json => console.log(json))\r\n}\r\n\r\nasync function addNewItemToCart(product) {\r\n    return fetch(`https://fakestoreapi.com/carts/`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(\r\n            {\r\n                userId: 1,\r\n                date: '2021 - 06 - 12',\r\n                products: [{ productId: product.id, quantity: 1 }]\r\n            }\r\n        )\r\n    })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            return json\r\n        })\r\n}\r\n\r\nasync function checkOut(didCheckOut) {\r\n    if (!didCheckOut) return { isCheckOut: didCheckOut, emptyCart: [] }\r\n    var isCheckOut = false;\r\n    const emptyCart = await deleteCart()\r\n    console.log('checkout done!')\r\n    isCheckOut = true;\r\n    return { isCheckOut, emptyCart }\r\n}\r\n\r\nasync function deleteCart() {\r\n    storageService.saveToStorage('cartItems', [])\r\n    return fetch('https://fakestoreapi.com/carts/6', {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            console.log('deleteCart', json)\r\n            return []\r\n        })\r\n}\r\n\r\nasync function getProductById(productId) {\r\n    if (productId === null) return {}\r\n    return fetch(`https://fakestoreapi.com/products/${productId}`)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            console.log('getProductById', json)\r\n            return json\r\n        })\r\n}","import { productAPI } from '../../api/productAPI'\r\nimport { cartAPI } from '../../api/cartAPI'\r\n\r\n\r\nexport const getProductList = (selectedCategory, sortBy) => async (dispatch) => {\r\n    try {\r\n        const res = await productAPI.query(selectedCategory, sortBy);\r\n        dispatch({ type: 'GET_PRODUCT_LIST', payload: res });\r\n    }\r\n    catch (err) { console.log('Error with getProductList') }\r\n}\r\n\r\n\r\nexport const addToCart = (product) => async (dispatch) => {\r\n    try {\r\n        const productAdded = await cartAPI.addToCart(product)\r\n        console.log('productAdded', productAdded)\r\n        dispatch({ type: 'ADD_TO_CART', payload: productAdded });\r\n    }\r\n    catch (err) { console.log('Error with addToCart') }\r\n}\r\n\r\n\r\nexport const getCart = () => async (dispatch) => {\r\n    try {\r\n        const cartItems = await cartAPI.getCart()\r\n        dispatch({ type: 'GET_CART', payload: cartItems });\r\n    }\r\n    catch (err) { console.log('Error with addToCart') }\r\n}\r\n\r\n\r\nexport const getCategories = () => async (dispatch) => {\r\n    try {\r\n        const categories = await productAPI.getCategories()\r\n        dispatch({ type: 'GET_CATEGORIES', payload: categories })\r\n    }\r\n    catch (err) { console.log('Error with getCategories') }\r\n}\r\n\r\n\r\nexport const setCategory = (categoryName) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'SET_CATEGORY', payload: categoryName })\r\n    }\r\n    catch (err) { console.log('Error with setCategory') }\r\n}\r\n\r\n\r\nexport const setPageNum = (pageNum) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'SET_PAGE_NUM', payload: pageNum })\r\n    }\r\n    catch (err) { console.log('Error with setPageNum') }\r\n}\r\n\r\n\r\nexport const checkOut = (didCheckOut, invoiceTotal = 0) => async (dispatch) => {\r\n    try {\r\n        const { isCheckOut, emptyCart } = await cartAPI.checkOut(didCheckOut)\r\n        dispatch({ type: 'CHECK_OUT', payload: { isCheckOut, emptyCart, invoiceTotal } });\r\n    }\r\n    catch (err) { console.log('Error with checkOut') }\r\n}\r\n\r\n\r\nexport const getProductForModal = (productId) => async (dispatch) => {\r\n    try {\r\n        const productForModal = await cartAPI.getProductById(productId)\r\n        dispatch({ type: 'GET_PRODUCT_FOR_MODAL', payload: productForModal });\r\n    }\r\n    catch (err) { console.log('Error with checkOut') }\r\n} \r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//actions\r\nimport { setPageNum } from '../store/actions/index'\r\n//metirial-UI\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                marginTop: theme.spacing(2),\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\ninterface Props {\r\n    productsLength: number;\r\n}\r\n\r\nconst BasicPagination: React.FC<Props> = ({ productsLength }) => {\r\n    const dispatch = useDispatch()\r\n    const currentPageNum = useSelector((state: any) => state.currentPageNum)\r\n\r\n    const handleChange = (event: any, newPageNum: number) => {\r\n        dispatch(setPageNum(newPageNum - 1));\r\n    };\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Pagination page={currentPageNum + 1} count={Math.ceil(productsLength / 5)} color=\"primary\" onChange={handleChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicPagination","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n//actions\r\nimport { getCategories, setCategory } from '../store/actions/index';\r\n//metirial-UI\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            marginTop: theme.spacing(9),\r\n            marginBottom: theme.spacing(3),\r\n            minWidth: 120,\r\n            cursor: 'context-menu',\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleSelect() {\r\n    const dispatch = useDispatch();\r\n    const categories = useSelector((state: any) => state.categories)\r\n    \r\n    useEffect(() => {\r\n        dispatch(getCategories())\r\n    }, [])\r\n\r\n    const selectedCategory = useSelector((state: any) => state.selectedCategory)\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        dispatch(setCategory(event.target.value as string))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Category</InputLabel>\r\n                {categories.length > 0 && <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    value={selectedCategory}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {categories.map((category: string) => {\r\n                        return <MenuItem key={category} value={category}>{category.charAt(0).toUpperCase() + category.slice(1)} </MenuItem>\r\n                    })}\r\n                </Select>}\r\n                <FormHelperText>Choose a Category you're interested in</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n//actions\r\nimport { getProductForModal, addToCart, getCart } from '../store/actions/index'\r\n//metirial-UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    product: {\r\n        id: number,\r\n        title: string,\r\n        price: number,\r\n        category: string,\r\n        description: string,\r\n        image: string\r\n    }\r\n}\r\n\r\nconst ProductModal: React.FC<Props> = ({ product }) => {\r\n    const dispatch = useDispatch()\r\n    console.log('hey')\r\n    const classes = useStyles();\r\n    // console.log('product', product)\r\n\r\n    const onCloseModal = async () => {\r\n        dispatch(getProductForModal(null))\r\n    }\r\n\r\n    const onAddToCart = async () => {\r\n        await dispatch(addToCart(product))\r\n        dispatch(getCart())\r\n    }\r\n\r\n    return (\r\n        <Card className=\"modal-card\">\r\n            <img className=\"modal-img\" src={product.image} alt=\"\" />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {product.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {product.description}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions className=\"modal-btn-container\">\r\n                <Button size=\"small\" color=\"primary\"  onClick={() => onAddToCart()}>\r\n                    Add to Cart\r\n                </Button>\r\n                <Button className=\"close-modal-btn\" size=\"small\" color=\"primary\" onClick={() => onCloseModal()}>\r\n                    Close\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProductModal","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n//actions\r\nimport { getProductList, getCart, addToCart, setPageNum, getProductForModal} from '../store/actions/index'\r\n//metirial-UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\n//cmps\r\nimport BasicPagination from '../cmps/BasicPagination';\r\nimport Filter from '../cmps/Filter';\r\nimport ProductModal from '../cmps/ProductModal';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n        backgroundColor: '#F9F9F9',\r\n    },\r\n});\r\ninterface productObj {\r\n    id: number,\r\n    title: string,\r\n    price: number,\r\n    category: string,\r\n    description: string,\r\n    image: string\r\n}\r\n\r\nconst ProductList: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const selectedCategory = useSelector((state: any) => state.selectedCategory)\r\n    const currentPageNum = useSelector((state: any) => state.currentPageNum)\r\n\r\n    const productsPerPage = 5;\r\n    \r\n    useEffect(() => {\r\n        async function aFunc() {\r\n            await dispatch(getProductList(selectedCategory))\r\n            await dispatch(setPageNum(0))\r\n        }\r\n        aFunc()\r\n    }, [selectedCategory])\r\n    \r\n    const products = useSelector((state: any) => state.productList)\r\n    const productsForDisplay = products.slice(currentPageNum * productsPerPage, currentPageNum * productsPerPage + productsPerPage)\r\n    const productForModal = useSelector((state: any) => state.productForModal)\r\n    const classes = useStyles();\r\n\r\n    const handleAddToCart = async (product: productObj, ev: any) => {\r\n        ev.stopPropagation()\r\n        await dispatch(addToCart(product))\r\n        dispatch(getCart())\r\n    }\r\n\r\n    const handleSort = async (sortBy:string) =>{\r\n        dispatch(getProductList(selectedCategory, sortBy))\r\n    }\r\n\r\n    const handleOpenProductModal = async (product: productObj) =>{\r\n        console.log('product', product)\r\n        dispatch(getProductForModal(product.id))\r\n        console.log('productForModal', productForModal)\r\n    }\r\n\r\n    return (\r\n        <Container className=\"main-content-container\" fixed>\r\n            <Filter />\r\n            {productForModal &&  productForModal.id && <ProductModal product={productForModal}/>}\r\n            {productsForDisplay && productsForDisplay.length>0 && <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow className=\"table-header\">\r\n                            <TableCell onClick={()=>handleSort('title')}>Product title</TableCell>\r\n                            <TableCell onClick={()=>handleSort('price')} align=\"right\">Price ($)</TableCell>\r\n                            <TableCell align=\"center\">Image</TableCell>\r\n                            <TableCell align=\"right\">Add to cart</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {productsForDisplay.map((product: productObj) => (\r\n                            <TableRow onClick={()=>handleOpenProductModal(product)} key={product.id} className=\"table-content\">\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {product.title}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{product.price}</TableCell>\r\n                                <TableCell align=\"center\"><img className=\"product-img\" src={product.image} alt=\"\" /></TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <AddShoppingCartIcon className=\"add-to-cart-icon\" onClick={(event) => handleAddToCart(product, event)} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>}\r\n            <BasicPagination productsLength={products.length} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductList;","import React from 'react';\r\n//metirial-UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 500,\r\n        margin: '24px auto',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        backgroundColor: '#F9F9F9'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n    },\r\n});\r\n\r\ninterface Props{\r\n    invoiceTotalForMsg: number\r\n}\r\n\r\nconst CheckOutMsg: React.FC<Props> = ({invoiceTotalForMsg}) =>{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                Checkout completed successfully!\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                Payment of ${invoiceTotalForMsg} recieved\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"pre\" style={{marginTop: '16px'}}>\r\n                <p>Your items are due to arrive within the next 7 business days</p>\r\n                <p>Feel free to contact us for any questions or issues At:</p>\r\n                <a className=\"contact-link\" href=\"my-store@react.redux\">my-store@react.redux</a>\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CheckOutMsg","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n//actions\r\nimport { getCart, checkOut } from '../store/actions/index'\r\n//cmps\r\nimport CheckOutMsg from '../cmps/CheckOutMsg'\r\n//metirial-UI\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst TAX_RATE = 0.17;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        table: {\r\n            minWidth: 700,\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            cursor: 'context-menu',\r\n        },\r\n    })\r\n);\r\n\r\nfunction ccyFormat(num: number) {\r\n    return `${num.toFixed(2)}`;\r\n}\r\n\r\ninterface CartItems {\r\n    title: string,\r\n    image: string;\r\n    qty: number;\r\n    price: number;\r\n}\r\n\r\nfunction subtotal(items: CartItems[]) {\r\n    if (items && items.length) return items.map(({ price, qty }) => (price * qty)).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst Cart: React.FC = () => {\r\n    var isCheckOutDone = false\r\n    const dispatch = useDispatch()\r\n    const cartItems = useSelector((state: any) => state.cartItems)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCart())\r\n    }, [])\r\n\r\n    const invoiceSubtotal = subtotal(cartItems) || 0;\r\n    const invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\n    const invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\n    const classes = useStyles();\r\n\r\n    isCheckOutDone = useSelector((state: any) => state.checkOut).isCheckOut;\r\n    const invoiceTotalForMsg = useSelector((state: any) => state.checkOut).invoiceTotal.toFixed(2);\r\n    \r\n    const handleCheckOut = async () => {\r\n        await dispatch(checkOut(true, invoiceTotal))\r\n        await dispatch(getCart())\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Link to=\"/\"><Button className=\"back-to-prod-list-btn\" variant=\"contained\" color=\"primary\">Back to Products list</Button></Link>\r\n            {cartItems.length>0 &&\r\n                <TableContainer className={classes.table} component={Paper}>\r\n                    <Table aria-label=\"spanning table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Product title</TableCell>\r\n                                <TableCell>Price ($)</TableCell>\r\n                                <TableCell align=\"center\">Image</TableCell>\r\n                                <TableCell>Qty.</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {cartItems.map((cartItem: any) => {\r\n                                return <TableRow key={cartItem.id}>\r\n                                    <TableCell>{cartItem.title}</TableCell>\r\n                                    <TableCell>{cartItem.price}</TableCell>\r\n                                    <TableCell align=\"center\"><img className=\"cart-item-img\" src={cartItem.image} alt=\"\" /></TableCell>\r\n                                    <TableCell>{cartItem.qty}</TableCell>\r\n                                </TableRow>\r\n                            }\r\n                            )}\r\n                            <TableRow>\r\n                                <TableCell rowSpan={3} />\r\n                                <TableCell colSpan={2}>Subtotal</TableCell>\r\n                                <TableCell className=\"cart-price\" align=\"right\">${ccyFormat(invoiceSubtotal)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Tax</TableCell>\r\n                                <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n                                <TableCell className=\"cart-price\" align=\"right\">${ccyFormat(invoiceTaxes)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2}>Total</TableCell>\r\n                                <TableCell className=\"cart-price\" align=\"right\">${ccyFormat(invoiceTotal)}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    <Button className=\"btn btn-check-out\" variant=\"contained\" color=\"primary\" onClick={() => handleCheckOut()}>Check Out</Button>\r\n                </TableContainer>}\r\n                {isCheckOutDone && <CheckOutMsg invoiceTotalForMsg={invoiceTotalForMsg} />}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n//actions\r\nimport { getCart, checkOut } from '../store/actions/index'\r\n//metirial-UI\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        sectionDesktop: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            },\r\n        },\r\n        sectionMobile: {\r\n            display: 'flex',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function PrimarySearchAppBar() {\r\n    const dispatch = useDispatch()\r\n    var cartItems = useSelector((state: any) => state.cartItems)\r\n    useEffect(() => {\r\n        dispatch(getCart())\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    interface CartItems {\r\n        title: string,\r\n        image: string;\r\n        qty: number;\r\n        price: number;\r\n    }\r\n\r\n    const itemsInCartCount = ()=>{\r\n        return cartItems.reduce((sum:number, item: CartItems) => sum + item.qty, 0);\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n\r\n            <Link className=\"link\" to=\"/cart\">\r\n                <MenuItem>\r\n                    <IconButton aria-label=\"show new notifications\" color=\"inherit\">\r\n                        <Badge badgeContent={itemsInCartCount()} color=\"secondary\">\r\n                            <ShoppingCartIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <p>Cart</p>\r\n                </MenuItem>\r\n            </Link>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar className=\"app-header\" position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        <Link to=\"/\" onClick={()=>dispatch(checkOut(false))}>Products</Link>\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                            <Link className=\"link\" to=\"/cart\">\r\n                                <Badge badgeContent={itemsInCartCount()} color=\"secondary\">\r\n                                    <ShoppingCartIcon />\r\n                                </Badge>\r\n                            </Link>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}","import { Route, HashRouter } from 'react-router-dom';\n//cmps\nimport ProductList from './views/ProductList';\nimport Cart from './views/Cart';\nimport AppHeader from './cmps/AppHeader';\n//styles\nimport './assets/style.css'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <AppHeader />\n\n        <Route component={Cart} path=\"/cart\" />\n        <Route component={ProductList} exact path=\"/\" />\n\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './store/reducers';\nimport App from './App';\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}